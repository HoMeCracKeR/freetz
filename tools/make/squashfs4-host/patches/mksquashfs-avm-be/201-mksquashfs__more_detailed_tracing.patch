--- squashfs-tools-mksquashfs-avm-be/mksquashfs.c
+++ squashfs-tools-mksquashfs-avm-be/mksquashfs.c
@@ -407,6 +407,7 @@
 	if(!uncompressed) {
 		c_byte = compressor_compress(comp, strm, d, s, size, block_size,
 			 &error);
+		TRACE("mangle2: compressed block: size = %d, compressed = %d\n", size, c_byte);
 		if(c_byte == -1)
 			BAD_ERROR("mangle2:: %s compress failed with error "
 				"code %d\n", comp->name, error);
@@ -414,6 +415,7 @@
 
 	if(c_byte == 0 || c_byte >= size) {
 		memcpy(d, s, size);
+		TRACE("mangle2: uncompressed block: size = %d\n", size);
 		return size | (data_block ? SQUASHFS_COMPRESSED_BIT_BLOCK :
 			SQUASHFS_COMPRESSED_BIT);
 	}
@@ -425,8 +427,10 @@
 int mangle(char *d, char *s, int size, int block_size,
 	int uncompressed, int data_block)
 {
-	return mangle2(stream, d, s, size, block_size, uncompressed,
+	int result = mangle2(stream, d, s, size, block_size, uncompressed,
 		data_block);
+	TRACE("mangle: result = 0x%08x\n", result);
+	return result;
 }
 
 
@@ -553,6 +557,7 @@
 	pthread_cleanup_push((void *) pthread_mutex_unlock, &pos_mutex);
 	pthread_mutex_lock(&pos_mutex);
 
+	TRACE("write_destination: fd = %u, offset = 0x%08llx, bytes = %d\n", fd, byte, bytes);
 	if(lseek(fd, off, SEEK_SET) == -1) {
 		ERROR("write_destination: Lseek on destination "
 			"failed because %s, offset=0x%llx\n", strerror(errno),
@@ -1669,8 +1674,8 @@
 	bytes += list_size;
 	total_bytes += list_size;
 
-	TRACE("generic_write_table: total uncompressed %d compressed %lld\n",
-		olength, bytes - obytes);
+	TRACE("generic_write_table: total uncompressed %d, compressed %lld, nocompress %u\n",
+		olength, bytes - obytes, uncompressed);
 
 	free(list);
 
@@ -3341,6 +3346,7 @@
 	struct pathnames *paths,
 	struct dir_ent *(_readdir)(struct dir_info *), int depth)
 {
+	TRACE("dir_scan1: filename=%s, subpath=%s\n", filename, subpath);
 	struct dir_info *dir = scan1_opendir(filename, subpath, depth);
 	struct dir_ent *dir_ent;
 
@@ -4986,7 +4992,9 @@
 	if(comp == NULL)
 		comp = lookup_compressor(COMP_DEFAULT);
 
+	TRACE("Parsing options ...\n");
 	for(i = source + 2; i < argc; i++) {
+		TRACE("Options ... i = %u, value = %s\n", i, argv[i]);
 		if(strcmp(argv[i], "-action") == 0 ||
 				strcmp(argv[i], "-a") ==0) {
 			if(++i == argc) {
@@ -5383,6 +5391,7 @@
 			exit(1);
 		}
 	}
+	TRACE("Parsing options done ...\n");
 
 	/*
 	 * Some compressors may need the options to be checked for validity
@@ -5409,12 +5418,15 @@
 	progress = FALSE;
 #endif
 
+	TRACE("Checking input sources ...\n");
 	for(i = 0; i < source; i++)
 		if(lstat(source_path[i], &source_buf) == -1) {
 			fprintf(stderr, "Cannot stat source directory \"%s\" "
 				"because %s\n", source_path[i],
 				strerror(errno));
 			EXIT_MKSQUASHFS();
+		} else {
+			TRACE("Input source %s found\n", source_path[i]);
 		}
 
 	destination_file = argv[source + 1];
@@ -5505,6 +5517,7 @@
 				strcmp(argv[i], "-af") == 0 ||
 				strcmp(argv[i], "-comp") == 0)
 			i++;
+	TRACE("Options processed ...\n");
 
 	if(!delete) {
 	        comp = read_super(fd, &sBlk, argv[source + 1]);
@@ -5531,10 +5544,12 @@
 
 	initialise_threads(readq, fragq, bwriteq, fwriteq, delete,
 		destination_file);
+	TRACE("Threads initialized ...\n");
 
 	res = compressor_init(comp, &stream, SQUASHFS_METADATA_SIZE, 0);
 	if(res)
 		BAD_ERROR("compressor_init failed\n");
+	TRACE("Compressor initialized ...\n");
 
 	if(delete) {
 		int size;
