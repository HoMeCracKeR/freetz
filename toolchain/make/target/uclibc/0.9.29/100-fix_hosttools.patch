--- utils/ldd.c
+++ utils/ldd.c
@@ -170,10 +170,10 @@
 	}
 }
 
-#if ELFCLASSM == ELFCLASS32
-# define byteswap_to_host(x) byteswap32_to_host(x)
-#else
+#if __WORDSIZE == 64
 # define byteswap_to_host(x) byteswap64_to_host(x)
+#else
+# define byteswap_to_host(x) byteswap32_to_host(x)
 #endif
 
 ElfW(Shdr) *elf_find_section_type(uint32_t key, ElfW(Ehdr) *ehdr)
@@ -235,7 +235,8 @@
 int check_elf_header(ElfW(Ehdr) *const ehdr)
 {
 	if (!ehdr || strncmp((char *)ehdr, ELFMAG, SELFMAG) != 0 ||
+	    /* Use TARGET_WORDSIZE, not ELFCLASSM which depends on the host */
+	    ehdr->e_ident[EI_CLASS] != (TARGET_WORDSIZE >> 5) ||
-	    ehdr->e_ident[EI_CLASS] != ELFCLASSM ||
 	    ehdr->e_ident[EI_VERSION] != EV_CURRENT)
 	{
 		return 1;
--- /dev/null
+++ utils/link.h
@@ -0,0 +1,11 @@
+
+#include <link.h>
+
+/* __WORDSIZE ist used for __ELF_NATIVE_CLASS, which is used for ElfW().
+  We want to provide the wordsize of the target, not of the host, when
+   compiling readelf.host
+ */
+#ifdef TARGET_WORDSIZE
+#undef __WORDSIZE
+#define __WORDSIZE TARGET_WORDSIZE
+#endif
