--- configure.ac
+++ configure.ac
@@ -385,7 +385,7 @@
 		 netinet/in.h netinet/in_systm.h dnl
 		 netinet/tcp.h arpa/inet.h dnl
 		 netdb.h sys/uio.h linux/if_tun.h linux/sockios.h dnl
-		 linux/types.h sys/poll.h sys/epoll.h err.h dnl
+		 linux/types.h err.h dnl
    )
    AC_CHECK_HEADERS(net/if.h,,,
 		 [#ifdef HAVE_SYS_TYPES_H
@@ -510,7 +510,7 @@
 # Windows use stdcall for winsock so we cannot auto detect these
 m4_define([SOCKET_FUNCS], [socket recv recvfrom send sendto listen dnl
           accept connect bind select gethostbyname inet_ntoa])
-m4_define([SOCKET_OPT_FUNCS], [setsockopt getsockopt getsockname poll])
+m4_define([SOCKET_OPT_FUNCS], [setsockopt getsockopt getsockname])
 
 if test "${WIN32}" = "yes"; then
 
@@ -565,13 +565,6 @@
 dnl check libraries
 dnl
 
-dnl Checking for a working epoll
-AC_CHECKING([for working epoll implementation])
-OLDLDFLAGS="$LDFLAGS"
-LDFLAGS="$LDFLAGS -Wl,--fatal-warnings"
-AC_CHECK_FUNC(epoll_create, AC_DEFINE(HAVE_EPOLL_CREATE, 1, [epoll_create function is defined]))
-LDFLAGS="$OLDLDFLAGS"
-
 dnl ipv6 support
 if test "$PF_INET6" = "yes"; then
   AC_CHECKING([for struct sockaddr_in6 for IPv6 support])
